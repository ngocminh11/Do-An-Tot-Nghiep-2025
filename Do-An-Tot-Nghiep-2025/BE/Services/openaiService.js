const { OpenAIApi, Configuration } = require('openai');
const Product = require('../Models/Products');
const Feedback = require('../Models/Feedback');

let openai = null;
try {
    const { Configuration, OpenAIApi } = require('openai');
    const configuration = new Configuration({
        apiKey: process.env.OPENAI_API_KEY
    });
    openai = new OpenAIApi(configuration);
} catch (e) {
    openai = null;
}

// L·∫•y danh s√°ch s·∫£n ph·∫©m t·ª´ database
async function getAllProductsFromDB() {
    try {
        const products = await Product.find({ 'basicInformation.status': 'active' });
        return products;
    } catch (err) {
        console.error('L·ªói l·∫•y s·∫£n ph·∫©m t·ª´ DB:', err);
        return [];
    }
}

const fallbackResponses = {
    greetings: [
        "Xin ch√†o! üòä M√¨nh l√† tr·ª£ l√Ω ·∫£o c·ªßa CoCo - th∆∞∆°ng hi·ªáu m·ªπ ph·∫©m thi√™n nhi√™n h√†ng ƒë·∫ßu Vi·ªát Nam. B·∫°n ƒëang quan t√¢m s·∫£n ph·∫©m n√†o hay c·∫ßn t∆∞ v·∫•n v·ªÅ v·∫•n ƒë·ªÅ da ·∫°?",
        "Ch√†o b·∫°n! M√¨nh l√† tr·ª£ l√Ω t∆∞ v·∫•n m·ªπ ph·∫©m CoCo. B·∫°n c·∫ßn gi√∫p g√¨ h√¥m nay?",
        "Ch√†o b·∫°n! CoCo lu√¥n s·∫µn s√†ng t∆∞ v·∫•n ƒë·ªÉ b·∫°n c√≥ l√†n da ƒë·∫πp. B·∫°n ƒëang g·∫∑p v·∫•n ƒë·ªÅ g√¨ v·ªÅ da?",
        "Xin ch√†o! R·∫•t vui ƒë∆∞·ª£c g·∫∑p b·∫°n. B·∫°n c·∫ßn t∆∞ v·∫•n s·∫£n ph·∫©m n√†o c·ªßa CoCo?",
        "Ch√†o m·ª´ng b·∫°n ƒë·∫øn v·ªõi CoCo! B·∫°n c·∫ßn t√¨m s·∫£n ph·∫©m chƒÉm s√≥c da n√†o?"
    ],
    
    skinType: {
        "da kh√¥": [
            "Da kh√¥ n√™n d√πng b·ªô s·∫£n ph·∫©m c·∫•p ·∫©m chuy√™n s√¢u c·ªßa CoCo g·ªìm: 1. S·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π, 2. Serum HA c·∫•p n∆∞·ªõc, 3. Kem d∆∞·ª°ng ·∫©m Ceramide. D√πng s√°ng v√† t·ªëi sau khi l√†m s·∫°ch da.",
            "V·ªõi da kh√¥, b·∫°n c·∫ßn c·∫•p ·∫©m s√¢u. B·ªô d∆∞·ª°ng ·∫©m chuy√™n s√¢u CoCo v·ªõi serum HA v√† kem d∆∞·ª°ng Ceramide s·∫Ω gi√∫p da b·∫°n m·ªÅm m·∫°i su·ªët ng√†y.",
            "Da kh√¥ d·ªÖ b·ªã bong tr√≥c? H√£y th·ª≠ b·ªô s·∫£n ph·∫©m d√†nh ri√™ng cho da kh√¥ c·ªßa CoCo g·ªìm s·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π, serum HA v√† kem d∆∞·ª°ng Ceramide nh√©!",
            "ƒê·ªÉ c·∫£i thi·ªán da kh√¥, b·∫°n n√™n d√πng s·∫£n ph·∫©m ch·ª©a Hyaluronic Acid v√† Ceramide. CoCo c√≥ serum HA v√† kem d∆∞·ª°ng ·∫©m Ceramide d√†nh ri√™ng cho da kh√¥.",
            "Da kh√¥ c·∫ßn ƒë∆∞·ª£c chƒÉm s√≥c ƒë·∫∑c bi·ªát. B·ªô s·∫£n ph·∫©m c·∫•p ·∫©m c·ªßa CoCo s·∫Ω cung c·∫•p ƒë·ªô ·∫©m su·ªët 72h, gi√∫p da b·∫°n m·ªÅm m·ªãn."
        ],
        "da d·∫ßu": [
            "Da d·∫ßu n√™n d√πng b·ªô ki·ªÅm d·∫ßu - se kh√≠t l·ªó ch√¢n l√¥ng c·ªßa CoCo: 1. S·ªØa r·ª≠a m·∫∑t Tea Tree, 2. Toner c√¢n b·∫±ng da, 3. Serum Niacinamide, 4. Kem d∆∞·ª°ng ki·ªÅm d·∫ßu kh√¥ng nh·ªùn.",
            "Ki·ªÉm so√°t d·∫ßu nh·ªùn v·ªõi b·ªô s·∫£n ph·∫©m da d·∫ßu CoCo: s·ªØa r·ª≠a m·∫∑t Tea Tree gi√∫p l√†m s·∫°ch s√¢u, serum Niacinamide gi·∫£m ti·∫øt d·∫ßu v√† kem d∆∞·ª°ng kh√¥ng g√¢y b√≠t t·∫Øc l·ªó ch√¢n l√¥ng.",
            "Da d·∫ßu th∆∞·ªùng g·∫∑p v·∫•n ƒë·ªÅ b√≥ng nh·ªùn v√† l·ªó ch√¢n l√¥ng to. B·ªô s·∫£n ph·∫©m CoCo cho da d·∫ßu s·∫Ω gi√∫p b·∫°n ki·ªÉm so√°t d·∫ßu, se kh√≠t l·ªó ch√¢n l√¥ng v√† ng·ª´a m·ª•n.",
            "ƒê·ª´ng lo l·∫Øng v·ªÅ da d·∫ßu! B·ªô s·∫£n ph·∫©m CoCo d√†nh cho da d·∫ßu v·ªõi chi·∫øt xu·∫•t Tea Tree v√† Niacinamide s·∫Ω gi√∫p da b·∫°n s·∫°ch d·∫ßu, th√¥ng tho√°ng su·ªët ng√†y.",
            "Da d·∫ßu c·∫ßn l√†m s·∫°ch nh·∫π nh√†ng v√† ki·ªÉm so√°t b√£ nh·ªùn. S·ªØa r·ª≠a m·∫∑t Tea Tree c·ªßa CoCo k·∫øt h·ª£p serum Niacinamide s·∫Ω l√† gi·∫£i ph√°p ho√†n h·∫£o cho b·∫°n."
        ],
        "da h·ªón h·ª£p": [
            "Da h·ªón h·ª£p n√™n d√πng b·ªô s·∫£n ph·∫©m ƒëi·ªÅu ti·∫øt d·∫ßu nh·ªùn v√πng ch·ªØ T v√† c·∫•p ·∫©m v√πng m√° c·ªßa CoCo: s·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π, toner c√¢n b·∫±ng, serum HA cho v√πng kh√¥ v√† serum Niacinamide cho v√πng d·∫ßu.",
            "ChƒÉm s√≥c da h·ªón h·ª£p ƒë√≤i h·ªèi s·ª± tinh t·∫ø. B·ªô s·∫£n ph·∫©m CoCo cho da h·ªón h·ª£p s·∫Ω gi√∫p b·∫°n ki·ªÉm so√°t d·∫ßu v√πng ch·ªØ T v√† c·∫•p ·∫©m v√πng m√° m·ªôt c√°ch hi·ªáu qu·∫£.",
            "Da h·ªón h·ª£p c·∫ßn chƒÉm s√≥c ri√™ng bi·ªát t·ª´ng v√πng. V√πng ch·ªØ T n√™n d√πng serum Niacinamide ki·ªÅm d·∫ßu, v√πng m√° d√πng serum HA c·∫•p ·∫©m. CoCo c√≥ ƒë·ªß b·ªô s·∫£n ph·∫©m d√†nh cho b·∫°n!",
            "B·∫°n c√≥ da h·ªón h·ª£p? ƒê·ª´ng lo, CoCo c√≥ gi·∫£i ph√°p: s·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π cho to√†n m·∫∑t, toner c√¢n b·∫±ng, serum Niacinamide cho v√πng ch·ªØ T v√† kem d∆∞·ª°ng HA cho v√πng m√°.",
            "Da h·ªón h·ª£p l√† lo·∫°i da kh√≥ chi·ªÅu nh·∫•t! H√£y th·ª≠ b·ªô s·∫£n ph·∫©m chuy√™n bi·ªát cho da h·ªón h·ª£p c·ªßa CoCo ƒë·ªÉ c√≥ l√†n da c√¢n b·∫±ng."
        ],
        "da nh·∫°y c·∫£m": [
            "V·ªõi da nh·∫°y c·∫£m, CoCo c√≥ d√≤ng s·∫£n ph·∫©m SensiCare kh√¥ng ch·ª©a h∆∞∆°ng li·ªáu, c·ªìn hay ch·∫•t b·∫£o qu·∫£n g√¢y k√≠ch ·ª©ng. B·ªô s·∫£n ph·∫©m g·ªìm: s·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π, toner l√†m d·ªãu v√† kem d∆∞·ª°ng ph·ª•c h·ªìi.",
            "Da nh·∫°y c·∫£m c·∫ßn s·∫£n ph·∫©m l√†nh t√≠nh. D√≤ng SensiCare c·ªßa CoCo v·ªõi th√†nh ph·∫ßn t·ª± nhi√™n, kh√¥ng h∆∞∆°ng li·ªáu, kh√¥ng c·ªìn s·∫Ω gi√∫p da b·∫°n d·ªãu nh·∫π, gi·∫£m k√≠ch ·ª©ng.",
            "ƒê·ª´ng ƒë·ªÉ da nh·∫°y c·∫£m ngƒÉn b·∫°n c√≥ l√†n da ƒë·∫πp! B·ªô s·∫£n ph·∫©m SensiCare c·ªßa CoCo ƒë∆∞·ª£c thi·∫øt k·∫ø ri√™ng cho da nh·∫°y c·∫£m, gi√∫p l√†m d·ªãu v√† ph·ª•c h·ªìi h√†ng r√†o b·∫£o v·ªá da.",
            "Da b·∫°n d·ªÖ ƒë·ªè, ng·ª©a? H√£y d√πng d√≤ng s·∫£n ph·∫©m SensiCare c·ªßa CoCo. V·ªõi th√†nh ph·∫ßn chi·∫øt xu·∫•t t·ª´ nha ƒëam v√† rau m√°, s·∫£n ph·∫©m s·∫Ω l√†m d·ªãu da ngay l·∫≠p t·ª©c.",
            "CoCo hi·ªÉu l√†n da nh·∫°y c·∫£m c·∫ßn s·ª± chƒÉm s√≥c ƒë·∫∑c bi·ªát. D√≤ng SensiCare kh√¥ng ch·ª©a 10 ch·∫•t g√¢y k√≠ch ·ª©ng ph·ªï bi·∫øn, an to√†n tuy·ªát ƒë·ªëi cho da b·∫°n."
        ],
        "m·ª•n": [
            "ƒê·ªÉ tr·ªã m·ª•n hi·ªáu qu·∫£, b·∫°n n√™n d√πng combo: 1. Gel r·ª≠a m·∫∑t Salicylic Acid, 2. Toner Tea Tree, 3. Serum tr·ªã m·ª•n BHA, 4. Kem d∆∞·ª°ng kh√¥ng g√¢y b√≠t t·∫Øc l·ªó ch√¢n l√¥ng.",
            "M·ª•n s·∫Ω kh√¥ng c√≤n l√† n·ªói lo v·ªõi b·ªô s·∫£n ph·∫©m tr·ªã m·ª•n CoCo: gel r·ª≠a m·∫∑t Salicylic Acid l√†m s·∫°ch s√¢u l·ªó ch√¢n l√¥ng, serum BHA ti√™u di·ªát vi khu·∫©n g√¢y m·ª•n v√† kem d∆∞·ª°ng kh√¥ng g√¢y b√≠t t·∫Øc.",
            "B·ªô s·∫£n ph·∫©m tr·ªã m·ª•n c·ªßa CoCo v·ªõi chi·∫øt xu·∫•t Tea Tree v√† Salicylic Acid gi√∫p gi·∫£m m·ª•n ƒë·∫øn 90% ch·ªâ sau 4 tu·∫ßn s·ª≠ d·ª•ng.",
            "ƒê√°nh bay m·ª•n v·ªõi b·ªô ƒë√¥i th·∫ßn th√°nh c·ªßa CoCo: serum tr·ªã m·ª•n BHA v√† kem d∆∞·ª°ng ng·ª´a m·ª•n. K·∫øt h·ª£p gel r·ª≠a m·∫∑t Salicylic Acid ƒë·ªÉ l√†m s·∫°ch s√¢u.",
            "M·ª•n ƒë·∫ßu ƒëen, m·ª•n s∆∞ng vi√™m? H√£y th·ª≠ b·ªô s·∫£n ph·∫©m tr·ªã m·ª•n c·ªßa CoCo. V·ªõi th√†nh ph·∫ßn BHA v√† Tea Tree, s·∫£n ph·∫©m s·∫Ω l√†m s·∫°ch l·ªó ch√¢n l√¥ng, gi·∫£m vi√™m v√† ng·ª´a m·ª•n quay l·∫°i."
        ],
        "th√¢m": [
            "ƒê·ªÉ l√†m m·ªù th√¢m, b·∫°n n√™n d√πng serum Vitamin C 15% c·ªßa CoCo v√†o bu·ªïi s√°ng v√† serum Niacinamide v√†o bu·ªïi t·ªëi. K·∫øt h·ª£p kem ch·ªëng n·∫Øng h√†ng ng√†y ƒë·ªÉ ngƒÉn th√¢m m·ªõi.",
            "V·∫øt th√¢m l√¢u nƒÉm s·∫Ω m·ªù ƒëi nhanh ch√≥ng v·ªõi b·ªô ƒë√¥i serum Vitamin C v√† Niacinamide c·ªßa CoCo. S·ª≠ d·ª•ng ƒë·ªÅu ƒë·∫∑n 2 l·∫ßn/ng√†y trong 4 tu·∫ßn.",
            "CoCo c√≥ gi·∫£i ph√°p to√†n di·ªán cho da th√¢m: serum Vitamin C l√†m s√°ng da ban ng√†y, serum Retinol t√°i t·∫°o da ban ƒë√™m v√† kem d∆∞·ª°ng ·∫©m kh√≥a ·∫©m.",
            "ƒê·ª´ng lo l·∫Øng v·ªÅ v·∫øt th√¢m! Serum l√†m s√°ng da c·ªßa CoCo v·ªõi 15% Vitamin C s·∫Ω gi√∫p da b·∫°n ƒë·ªÅu m√†u ch·ªâ sau 2 tu·∫ßn s·ª≠ d·ª•ng.",
            "B·ªô s·∫£n ph·∫©m tr·ªã th√¢m CoCo g·ªìm: t·∫©y t·∫ø b√†o ch·∫øt AHA 2 l·∫ßn/tu·∫ßn, serum Vitamin C h√†ng ng√†y v√† m·∫∑t n·∫° d∆∞·ª°ng s√°ng 2 l·∫ßn/tu·∫ßn."
        ],
        "n√°m": [
            "Da n√°m c·∫ßn chƒÉm s√≥c ƒë·∫∑c bi·ªát v·ªõi serum Vitamin C 20% c·ªßa CoCo v√†o bu·ªïi s√°ng v√† serum Tranexamic Acid v√†o bu·ªïi t·ªëi. Lu√¥n d√πng kem ch·ªëng n·∫Øng SPF50+.",
            "ƒê·ªëi v·ªõi n√°m da, CoCo khuy√™n d√πng b·ªô s·∫£n ph·∫©m chuy√™n bi·ªát: serum gi·∫£m n√°m v·ªõi th√†nh ph·∫ßn Tranexamic Acid, kem d∆∞·ª°ng ·∫©m ch·ª©a Niacinamide v√† kem ch·ªëng n·∫Øng v·∫≠t l√Ω.",
            "N√°m da s·∫Ω ƒë∆∞·ª£c c·∫£i thi·ªán ƒë√°ng k·ªÉ v·ªõi li·ªáu tr√¨nh 3 b∆∞·ªõc c·ªßa CoCo: l√†m s·∫°ch s√¢u, serum ƒë·∫∑c tr·ªã n√°m v√† d∆∞·ª°ng ·∫©m kh√≥a ·∫©m. S·ª≠ d·ª•ng li√™n t·ª•c 8 tu·∫ßn.",
            "Serum tr·ªã n√°m CoCo v·ªõi c√¥ng ngh·ªá ƒë·ªôc quy·ªÅn ch·ª©a 5% Tranexamic Acid v√† 3% Niacinamide s·∫Ω l√†m m·ªù v·∫øt n√°m ch·ªâ sau 1 li·ªáu tr√¨nh.",
            "ƒê·ªÉ tr·ªã n√°m hi·ªáu qu·∫£, ngo√†i d√πng serum ƒë·∫∑c tr·ªã, b·∫°n c·∫ßn tr√°nh n·∫Øng tuy·ªát ƒë·ªëi. Kem ch·ªëng n·∫Øng SPF50+ PA++++ c·ªßa CoCo s·∫Ω b·∫£o v·ªá da b·∫°n t·ªëi ∆∞u."
        ],
        "l√£o h√≥a": [
            "Ch·ªëng l√£o h√≥a v·ªõi b·ªô s·∫£n ph·∫©m CoCo: serum Retinol ban ƒë√™m, serum Vitamin C ban ng√†y v√† kem d∆∞·ª°ng peptide. K·∫øt h·ª£p m·∫∑t n·∫° collagen 2 l·∫ßn/tu·∫ßn.",
            "ƒê·ªÉ da cƒÉng m·ªãn, gi·∫£m n·∫øp nhƒÉn, h√£y th·ª≠ b·ªô ch·ªëng l√£o h√≥a c·ªßa CoCo g·ªìm: serum Retinol 0.5%, kem d∆∞·ª°ng peptide v√† kem m·∫Øt chuy√™n s√¢u.",
            "CoCo c√≥ gi·∫£i ph√°p to√†n di·ªán cho da l√£o h√≥a: serum tƒÉng sinh collagen, kem d∆∞·ª°ng ch·ª©a peptide v√† m·∫∑t n·∫° v√†ng 24K. S·ª≠ d·ª•ng ƒë·ªÅu ƒë·∫∑n ƒë·ªÉ da tr·∫ª h√≥a.",
            "Serum ch·ªëng l√£o h√≥a CoCo v·ªõi 10% Vitamin C + 2% Retinol s·∫Ω gi√∫p da b·∫°n cƒÉng b√≥ng, gi·∫£m n·∫øp nhƒÉn ch·ªâ sau 4 tu·∫ßn.",
            "B·ªô s·∫£n ph·∫©m ph·ª•c h·ªìi da l√£o h√≥a c·ªßa CoCo g·ªìm: s·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π, toner c√¢n b·∫±ng, serum ph·ª•c h·ªìi v√† kem d∆∞·ª°ng ban ƒë√™m. D√πng li√™n t·ª•c 8 tu·∫ßn."
        ]
    },
    
    productInfo: {
        "serum vitamin c": [
            "Serum Vitamin C 15% c·ªßa CoCo gi√∫p l√†m s√°ng da, m·ªù th√¢m n√°m. C√°ch d√πng: 3-4 gi·ªçt thoa ƒë·ªÅu m·∫∑t m·ªói s√°ng tr∆∞·ªõc kem d∆∞·ª°ng.",
            "Serum Vitamin C 15% t·ª´ CoCo v·ªõi c√¥ng ngh·ªá b·ªÅn v·ªØng, th·∫©m th·∫•u nhanh, gi√∫p da s√°ng m·ªãn ch·ªâ sau 2 tu·∫ßn. Thoa m·ªói s√°ng tr∆∞·ªõc kem d∆∞·ª°ng.",
            "B·∫°n mu·ªën da s√°ng h·ªìng? Serum Vitamin C 15% c·ªßa CoCo ch·ª©a L-Ascorbic Acid tinh khi·∫øt, k·∫øt h·ª£p Vitamin E v√† Ferulic Acid, gi√∫p ch·ªëng oxy h√≥a v√† l√†m s√°ng da hi·ªáu qu·∫£.",
            "Serum Vitamin C CoCo l√† s·∫£n ph·∫©m best-seller. V·ªõi 15% Vitamin C d·∫°ng ·ªïn ƒë·ªãnh, serum gi√∫p l√†m ƒë·ªÅu m√†u da, m·ªù th√¢m v√† ch·ªëng l√£o h√≥a.",
            "ƒê√°nh bay v·∫øt th√¢m v·ªõi Serum Vitamin C 15% c·ªßa CoCo. S·∫£n ph·∫©m d√†nh cho m·ªçi lo·∫°i da, k·ªÉ c·∫£ da nh·∫°y c·∫£m. Thoa m·ªói s√°ng ƒë·ªÉ c√≥ k·∫øt qu·∫£ t·ªët nh·∫•t."
        ],
        "kem ch·ªëng n·∫Øng": [
            "Kem ch·ªëng n·∫Øng v·∫≠t l√Ω SPF50+ PA++++ c·ªßa CoCo kh√¥ng c·ªìn, kh√¥ng nh·ªùn r√≠t, b·∫£o v·ªá da t·ªëi ∆∞u. D√πng l∆∞·ª£ng ƒë·ªìng xu m·ªói s√°ng sau d∆∞·ª°ng da.",
            "Kem ch·ªëng n·∫Øng CoCo SPF50+ PA++++ v·ªõi th√†nh ph·∫ßn l√†nh t√≠nh, b·∫£o v·ªá da kh·ªèi UVA/UVB. Kh√¥ng g√¢y b√≠t t·∫Øc l·ªó ch√¢n l√¥ng, kh√¥ng v·ªát tr·∫Øng.",
            "Ch·ªëng n·∫Øng l√† b∆∞·ªõc kh√¥ng th·ªÉ thi·∫øu! Kem ch·ªëng n·∫Øng v·∫≠t l√Ω lai h√≥a h·ªçc SPF50+ c·ªßa CoCo b·∫£o v·ªá to√†n di·ªán, th·∫©m th·∫•u nhanh, kh√¥ng nh·ªùn r√≠t.",
            "Kem ch·ªëng n·∫Øng CoCo SPF50+ PA++++ ph√π h·ª£p m·ªçi lo·∫°i da, k·ªÉ c·∫£ da nh·∫°y c·∫£m. S·∫£n ph·∫©m kh√¥ng ch·ª©a c·ªìn, kh√¥ng h∆∞∆°ng li·ªáu, an to√†n tuy·ªát ƒë·ªëi.",
            "B·∫£o v·ªá da kh·ªèi t√°c h·∫°i c·ªßa √°nh n·∫Øng v·ªõi kem ch·ªëng n·∫Øng SPF50+ c·ªßa CoCo. S·∫£n ph·∫©m ch·ªëng th·∫•m n∆∞·ªõc, kh√¥ng tr√¥i khi ƒë·ªï m·ªì h√¥i, d√πng ƒë∆∞·ª£c c·∫£ khi ƒëi bi·ªÉn."
        ],
        "kem d∆∞·ª°ng ·∫©m": [
            "Kem d∆∞·ª°ng ·∫©m HA + Ceramide c·ªßa CoCo c·∫•p ·∫©m 72h, ph√π h·ª£p m·ªçi lo·∫°i da. D√πng s√°ng v√† t·ªëi sau serum.",
            "Kem d∆∞·ª°ng ·∫©m CoCo v·ªõi Hyaluronic Acid v√† Ceramide gi√∫p da cƒÉng m·ªçng, kh√≥a ·∫©m su·ªët 72h. S·∫£n ph·∫©m kh√¥ng g√¢y b√≠t t·∫Øc l·ªó ch√¢n l√¥ng.",
            "Da b·∫°n kh√¥ r√°p? Kem d∆∞·ª°ng ·∫©m HA + Ceramide c·ªßa CoCo s·∫Ω cung c·∫•p ƒë·ªô ·∫©m t·ª©c th√¨, gi√∫p da m·ªÅm m·ªãn, cƒÉng b√≥ng.",
            "Kem d∆∞·ª°ng ·∫©m CoCo d√†nh cho m·ªçi lo·∫°i da, k·ªÉ c·∫£ da d·∫ßu m·ª•n. K·∫øt c·∫•u gel m·ªèng nh·∫π, th·∫©m th·∫•u nhanh, kh√¥ng g√¢y nh·ªùn r√≠t.",
            "D∆∞·ª°ng ·∫©m l√† b∆∞·ªõc quan tr·ªçng nh·∫•t! Kem d∆∞·ª°ng ·∫©m HA + Ceramide c·ªßa CoCo s·∫Ω ph·ª•c h·ªìi h√†ng r√†o b·∫£o v·ªá da, ngƒÉn m·∫•t n∆∞·ªõc v√† b·∫£o v·ªá da kh·ªèi t√°c nh√¢n g√¢y h·∫°i."
        ],
        "s·ªØa r·ª≠a m·∫∑t": [
            "S·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π CoCo v·ªõi th√†nh ph·∫ßn t·ª´ tr√† xanh v√† l√¥ h·ªôi, l√†m s·∫°ch s√¢u m√† kh√¥ng g√¢y kh√¥ da. D√πng s√°ng v√† t·ªëi.",
            "S·ªØa r·ª≠a m·∫∑t Tea Tree c·ªßa CoCo d√†nh cho da d·∫ßu m·ª•n, gi√∫p l√†m s·∫°ch b√£ nh·ªùn, ng·ª´a m·ª•n hi·ªáu qu·∫£. D√πng 2 l·∫ßn/ng√†y.",
            "S·ªØa r·ª≠a m·∫∑t CoCo SensiCare d√†nh cho da nh·∫°y c·∫£m, kh√¥ng ch·ª©a x√† ph√≤ng, h∆∞∆°ng li·ªáu, l√†m s·∫°ch d·ªãu nh·∫π, kh√¥ng g√¢y k√≠ch ·ª©ng.",
            "B·∫°n c·∫ßn s·ªØa r·ª≠a m·∫∑t n√†o? CoCo c√≥ 3 lo·∫°i: d·ªãu nh·∫π cho da kh√¥, tea tree cho da d·∫ßu m·ª•n, v√† SensiCare cho da nh·∫°y c·∫£m.",
            "S·ªØa r·ª≠a m·∫∑t t·∫°o b·ªçt CoCo v·ªõi chi·∫øt xu·∫•t tr√†m tr√† s·∫Ω gi√∫p da b·∫°n s·∫°ch s√¢u, th√¥ng tho√°ng l·ªó ch√¢n l√¥ng. D√πng l∆∞·ª£ng b·∫±ng h·∫°t ƒë·∫≠u m·ªói l·∫ßn."
        ],
        "toner": [
            "Toner c√¢n b·∫±ng da CoCo v·ªõi th√†nh ph·∫ßn tr√† xanh v√† HA, gi√∫p c√¢n b·∫±ng pH, c·∫•p ·∫©m t·ª©c th√¨. D√πng sau khi r·ª≠a m·∫∑t.",
            "Toner Tea Tree c·ªßa CoCo d√†nh cho da d·∫ßu m·ª•n, gi√∫p se kh√≠t l·ªó ch√¢n l√¥ng, kh√°ng khu·∫©n. D√πng s√°ng v√† t·ªëi sau khi r·ª≠a m·∫∑t.",
            "Toner l√†m d·ªãu da CoCo SensiCare v·ªõi chi·∫øt xu·∫•t nha ƒëam, gi√∫p l√†m d·ªãu da nh·∫°y c·∫£m, gi·∫£m m·∫©n ƒë·ªè. Kh√¥ng c·ªìn, kh√¥ng h∆∞∆°ng li·ªáu.",
            "Sau b∆∞·ªõc l√†m s·∫°ch, h√£y d√πng toner CoCo ƒë·ªÉ c√¢n b·∫±ng da v√† tƒÉng hi·ªáu qu·∫£ h·∫•p th·ª• d∆∞·ª°ng ch·∫•t t·ª´ c√°c b∆∞·ªõc ti·∫øp theo.",
            "Toner CoCo v·ªõi 5% Niacinamide gi√∫p l√†m s√°ng da, gi·∫£m th√¢m, c√¢n b·∫±ng d·∫ßu nh·ªùn. D√πng 2 l·∫ßn/ng√†y sau khi r·ª≠a m·∫∑t."
        ],
        "m·∫∑t n·∫°": [
            "M·∫∑t n·∫° ng·ªß Collagen CoCo gi√∫p ph·ª•c h·ªìi da ban ƒë√™m, cung c·∫•p ƒë·ªô ·∫©m s√¢u, gi√∫p da s√°ng m·ªãn khi th·ª©c d·∫≠y. D√πng 2-3 l·∫ßn/tu·∫ßn.",
            "M·∫∑t n·∫° ƒë·∫•t s√©t CoCo gi√∫p h√∫t d·∫ßu th·ª´a, l√†m s·∫°ch s√¢u l·ªó ch√¢n l√¥ng. D√†nh cho da d·∫ßu, d√πng 1-2 l·∫ßn/tu·∫ßn.",
            "M·∫∑t n·∫° d∆∞·ª°ng ·∫©m HA CoCo c·∫•p ·∫©m t·ª©c th√¨ cho da kh√¥ r√°p. ƒê·∫Øp 10-15 ph√∫t, 2-3 l·∫ßn/tu·∫ßn.",
            "M·∫∑t n·∫° v√†ng 24K CoCo gi√∫p tr·∫ª h√≥a da, gi·∫£m n·∫øp nhƒÉn, cƒÉng b√≥ng da. D√†nh cho da l√£o h√≥a, d√πng 1-2 l·∫ßn/tu·∫ßn.",
            "M·∫∑t n·∫° tr√† xanh CoCo gi√∫p l√†m d·ªãu da, gi·∫£m m·∫©n ƒë·ªè, c·∫•p ·∫©m nh·∫π. Ph√π h·ª£p m·ªçi lo·∫°i da, d√πng 2-3 l·∫ßn/tu·∫ßn."
        ],
        "t·∫©y trang": [
            "D·∫ßu t·∫©y trang CoCo v·ªõi th√†nh ph·∫ßn d·∫ßu √¥ liu nguy√™n ch·∫•t, l√†m s·∫°ch makeup nh·∫π nh√†ng m√† kh√¥ng g√¢y kh√¥ da.",
            "N∆∞·ªõc t·∫©y trang 3 in 1 CoCo l√†m s·∫°ch makeup, b√£ nh·ªùn v√† b·ª•i b·∫©n ch·ªâ v·ªõi 1 b∆∞·ªõc. Kh√¥ng c·∫ßn r·ª≠a l·∫°i v·ªõi n∆∞·ªõc.",
            "B√¥ng t·∫©y trang CoCo th·∫•m d·∫ßu t·∫©y trang, gi√∫p l√†m s·∫°ch makeup hi·ªáu qu·∫£. M·ªÅm m·∫°i, kh√¥ng g√¢y x∆∞·ªõc da.",
            "T·∫©y trang l√† b∆∞·ªõc quan tr·ªçng tr∆∞·ªõc khi ƒëi ng·ªß. D·∫ßu t·∫©y trang CoCo s·∫Ω l√†m s·∫°ch m·ªçi lo·∫°i makeup k·ªÉ c·∫£ waterproof.",
            "B·ªô t·∫©y trang CoCo g·ªìm d·∫ßu t·∫©y trang v√† n∆∞·ªõc hoa h·ªìng s·∫Ω gi√∫p da b·∫°n s·∫°ch s√¢u, th√¥ng tho√°ng l·ªó ch√¢n l√¥ng."
        ]
    },
    
    usageInstructions: [
        "C√°c b∆∞·ªõc skincare c∆° b·∫£n: 1. L√†m s·∫°ch, 2. Toner, 3. Serum, 4. Kem d∆∞·ª°ng, 5. Ch·ªëng n·∫Øng (ban ng√†y). M·ªói s·∫£n ph·∫©m n√™n c√°ch nhau 1-2 ph√∫t ƒë·ªÉ th·∫©m th·∫•u.",
        "ƒê·ªÉ s·∫£n ph·∫©m ph√°t huy hi·ªáu qu·∫£, h√£y d√πng theo th·ª© t·ª±: s·ªØa r·ª≠a m·∫∑t ‚Üí toner ‚Üí serum ‚Üí kem d∆∞·ª°ng. Ban ng√†y nh·ªõ th√™m kem ch·ªëng n·∫Øng nh√©!",
        "B·∫°n m·ªõi b·∫Øt ƒë·∫ßu skincare? H√£y b·∫Øt ƒë·∫ßu v·ªõi 3 b∆∞·ªõc c∆° b·∫£n: l√†m s·∫°ch - d∆∞·ª°ng ·∫©m - ch·ªëng n·∫Øng. Sau ƒë√≥ m·ªõi b·ªï sung serum khi c·∫ßn.",
        "Th·ª© t·ª± d∆∞·ª°ng da: s·∫£n ph·∫©m lo√£ng nh·∫•t ƒë·∫øn ƒë·∫∑c nh·∫•t. V√≠ d·ª•: toner ‚Üí serum d·∫°ng n∆∞·ªõc ‚Üí serum d·∫°ng ƒë·∫∑c ‚Üí kem d∆∞·ª°ng.",
        "L∆∞u √Ω khi d√πng serum Vitamin C: thoa v√†o bu·ªïi s√°ng tr∆∞·ªõc kem d∆∞·ª°ng, tr√°nh v√πng m·∫Øt. K·∫øt h·ª£p kem ch·ªëng n·∫Øng ƒë·ªÉ tƒÉng hi·ªáu qu·∫£.",
        "Retinol n√™n d√πng v√†o bu·ªïi t·ªëi, b·∫Øt ƒë·∫ßu v·ªõi t·∫ßn su·∫•t 2 l·∫ßn/tu·∫ßn r·ªìi tƒÉng d·∫ßn. Lu√¥n d√πng kem ch·ªëng n·∫Øng v√†o ng√†y h√¥m sau.",
        "ƒê·ªÉ serum ph√°t huy t·ªëi ƒëa hi·ªáu qu·∫£, h√£y v·ªó nh·∫π cho serum th·∫©m th·∫•u ho√†n to√†n tr∆∞·ªõc khi thoa b∆∞·ªõc ti·∫øp theo.",
        "M·∫∑t n·∫° n√™n ƒë·∫Øp sau b∆∞·ªõc toner, tr∆∞·ªõc b∆∞·ªõc serum. Th·ªùi gian ƒë·∫Øp t·ª´ 10-20 ph√∫t t√πy lo·∫°i.",
        "Kem ch·ªëng n·∫Øng n√™n thoa sau b∆∞·ªõc d∆∞·ª°ng ·∫©m, tr∆∞·ªõc khi trang ƒëi·ªÉm. Thoa l∆∞·ª£ng ƒë·ªß (1/4 th√¨a c√† ph√™ cho m·∫∑t) v√† thoa l·∫°i sau 2-3 gi·ªù.",
        "T·∫©y t·∫ø b√†o ch·∫øt v·∫≠t l√Ω n√™n d√πng 1-2 l·∫ßn/tu·∫ßn, t·∫©y t·∫ø b√†o ch·∫øt h√≥a h·ªçc (AHA/BHA) d√πng 2-3 l·∫ßn/tu·∫ßn t√πy lo·∫°i da."
    ],
    
    ingredients: [
        "Hyaluronic Acid (HA): Gi·ªØ ·∫©m, c·∫•p n∆∞·ªõc cho da, gi√∫p da cƒÉng m·ªçng.",
        "Niacinamide (Vitamin B3): L√†m s√°ng da, gi·∫£m th√¢m, ki·ªÉm so√°t d·∫ßu nh·ªùn, thu nh·ªè l·ªó ch√¢n l√¥ng.",
        "Vitamin C: Ch·ªëng oxy h√≥a, l√†m s√°ng da, m·ªù th√¢m, k√≠ch th√≠ch s·∫£n sinh collagen.",
        "Retinol (Vitamin A): TƒÉng t·∫ø b√†o m·ªõi, gi·∫£m n·∫øp nhƒÉn, tr·ªã m·ª•n, l√†m ƒë·ªÅu m√†u da.",
        "Salicylic Acid (BHA): Tan trong d·∫ßu, th·∫•m s√¢u l·ªó ch√¢n l√¥ng, tr·ªã m·ª•n, l√†m s·∫°ch da.",
        "AHA (Glycolic Acid, Lactic Acid): T·∫©y t·∫ø b√†o ch·∫øt b·ªÅ m·∫∑t, l√†m s√°ng da, m·ªù v·∫øt th√¢m.",
        "Ceramide: D∆∞·ª°ng ·∫©m, ph·ª•c h·ªìi h√†ng r√†o b·∫£o v·ªá da, gi·∫£m kh√¥ r√°p.",
        "Peptide: K√≠ch th√≠ch s·∫£n sinh collagen, gi·∫£m n·∫øp nhƒÉn, tr·∫ª h√≥a da.",
        "Tea Tree Oil: Kh√°ng khu·∫©n, kh√°ng vi√™m, tr·ªã m·ª•n hi·ªáu qu·∫£.",
        "Centella Asiatica (C·ªè m·ª±c): L√†m d·ªãu da, gi·∫£m m·∫©n ƒë·ªè, k√≠ch th√≠ch t√°i t·∫°o da."
    ],
    
    combos: [
        "Combo da d·∫ßu m·ª•n: S·ªØa r·ª≠a m·∫∑t Tea Tree + Toner Tea Tree + Serum Niacinamide + Kem d∆∞·ª°ng ki·ªÅm d·∫ßu",
        "Combo da kh√¥: S·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π + Toner HA + Serum HA + Kem d∆∞·ª°ng Ceramide",
        "Combo l√†m s√°ng da: Serum Vitamin C bu·ªïi s√°ng + Serum Niacinamide bu·ªïi t·ªëi + Kem ch·ªëng n·∫Øng SPF50+",
        "Combo ch·ªëng l√£o h√≥a: Serum Retinol bu·ªïi t·ªëi + Serum Vitamin C bu·ªïi s√°ng + Kem d∆∞·ª°ng peptide",
        "Combo da nh·∫°y c·∫£m: S·ªØa r·ª≠a m·∫∑t SensiCare + Toner l√†m d·ªãu + Kem d∆∞·ª°ng ph·ª•c h·ªìi",
        "Combo tr·ªã th√¢m: Serum Vitamin C + Serum Tranexamic Acid + Kem ch·ªëng n·∫Øng SPF50+",
        "Combo d∆∞·ª°ng ·∫©m chuy√™n s√¢u: Serum HA + M·∫∑t n·∫° d∆∞·ª°ng ·∫©m + Kem d∆∞·ª°ng Ceramide",
        "Combo se kh√≠t l·ªó ch√¢n l√¥ng: Toner BHA + Serum Niacinamide + M·∫∑t n·∫° ƒë·∫•t s√©t"
    ],
    
    promotions: [
        "Hi·ªán CoCo ƒëang c√≥ ch∆∞∆°ng tr√¨nh mua 2 t·∫∑ng 1 cho t·∫•t c·∫£ serum. √Åp d·ª•ng ƒë·∫øn h·∫øt th√°ng n√†y!",
        "∆Øu ƒë√£i ƒë·∫∑c bi·ªát: Gi·∫£m 20% khi mua combo b·∫•t k·ª≥. Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn ƒë∆°n h√†ng t·ª´ 500k.",
        "Khuy·∫øn m√£i cu·ªëi tu·∫ßn: Mua kem d∆∞·ª°ng ·∫©m t·∫∑ng k√®m toner mini. Ch·ªâ √°p d·ª•ng th·ª© 7 v√† CN.",
        "Ch√†o h√® 2024: Gi·∫£m 30% to√†n b·ªô kem ch·ªëng n·∫Øng. B·∫£o v·ªá da kh·ªèi n·∫Øng h√® gay g·∫Øt!",
        "Sinh nh·∫≠t CoCo: Mua 1 t·∫∑ng 1 cho t·∫•t c·∫£ s·∫£n ph·∫©m d√≤ng SensiCare. Ch∆∞∆°ng tr√¨nh c√≥ h·∫°n!",
        "Tri √¢n kh√°ch h√†ng: T√≠ch ƒëi·ªÉm 10% cho m·ªçi ƒë∆°n h√†ng. ƒê·ªïi qu√† sau 10 ƒëi·ªÉm.",
        "Freeship to√†n qu·ªëc cho ƒë∆°n h√†ng t·ª´ 300k. √Åp d·ª•ng c·∫£ ng√†y trong tu·∫ßn!",
        "Combo qu√† t·∫∑ng h·∫•p d·∫´n tr·ªã gi√° 800k khi mua ƒë∆°n h√†ng t·ª´ 1.5 tri·ªáu."
    ],
    
    afterSales: [
        "B·∫°n c√≥ th·ªÉ ƒë·ªïi tr·∫£ s·∫£n ph·∫©m trong v√≤ng 7 ng√†y n·∫øu ch∆∞a m·ªü h·ªôp, c√≤n nguy√™n seal.",
        "Ch√≠nh s√°ch b·∫£o h√†nh: Ho√†n ti·ªÅn 100% n·∫øu s·∫£n ph·∫©m kh√¥ng ƒë√∫ng ch·∫•t l∆∞·ª£ng.",
        "Li√™n h·ªá hotline 1900 1234 ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ ƒë·ªïi tr·∫£. Gi·ªù l√†m vi·ªác: 8h-21h h√†ng ng√†y.",
        "B·∫°n c·∫ßn h·ªó tr·ª£ v·ªÅ ƒë∆°n h√†ng? Vui l√≤ng cung c·∫•p m√£ ƒë∆°n h√†ng ƒë·ªÉ m√¨nh ki·ªÉm tra gi√∫p b·∫°n.",
        "S·∫£n ph·∫©m b·ªã l·ªói? Ch·ª•p ·∫£nh s·∫£n ph·∫©m v√† g·ª≠i v·ªÅ email support@coco.vn, ch√∫ng t√¥i s·∫Ω h·ªó tr·ª£ b·∫°n ngay.",
        "Th·ªùi gian giao h√†ng: 1-3 ng√†y v·ªõi n·ªôi th√†nh, 3-7 ng√†y v·ªõi t·ªânh th√†nh kh√°c. Mi·ªÖn ph√≠ ship ƒë∆°n t·ª´ 500k.",
        "B·∫°n c√≥ th·ªÉ theo d√µi ƒë∆°n h√†ng t·∫°i website coco.vn theo d√µi ƒë∆°n h√†ng > nh·∫≠p m√£ ƒë∆°n h√†ng.",
        "Ch√≠nh s√°ch t√≠ch ƒëi·ªÉm: 1 ƒëi·ªÉm = 10.000ƒë. C√≥ th·ªÉ d√πng ƒëi·ªÉm ƒë·ªÉ gi·∫£m gi√° cho ƒë∆°n h√†ng ti·∫øp theo."
    ],
    
    fallbacks: [
        "Xin l·ªói, m√¨nh ch∆∞a hi·ªÉu r√µ c√¢u h·ªèi c·ªßa b·∫°n. B·∫°n c√≥ th·ªÉ cho bi·∫øt b·∫°n ƒëang g·∫∑p v·∫•n ƒë·ªÅ g√¨ v·ªÅ da?",
        "B·∫°n c·∫ßn t∆∞ v·∫•n v·ªÅ s·∫£n ph·∫©m n√†o c·ªßa CoCo? M√¨nh c√≥ th·ªÉ gi√∫p b·∫°n t√¨m s·∫£n ph·∫©m ph√π h·ª£p.",
        "B·∫°n c√≥ th·ªÉ n√≥i r√µ h∆°n v·ªÅ nhu c·∫ßu c·ªßa m√¨nh kh√¥ng? M√¨nh s·∫Ω c·ªë g·∫Øng t∆∞ v·∫•n t·ªët nh·∫•t.",
        "Hi·ªán t·∫°i m√¨nh ch∆∞a n·∫Øm r√µ th·∫Øc m·∫Øc c·ªßa b·∫°n. B·∫°n ƒëang quan t√¢m ƒë·∫øn v·∫•n ƒë·ªÅ da hay s·∫£n ph·∫©m n√†o?",
        "ƒê·ªÉ m√¨nh t∆∞ v·∫•n t·ªët h∆°n, b·∫°n cho m√¨nh bi·∫øt: 1. Lo·∫°i da c·ªßa b·∫°n 2. V·∫•n ƒë·ªÅ b·∫°n quan t√¢m 3. S·∫£n ph·∫©m b·∫°n ƒëang d√πng (n·∫øu c√≥)",
        "Xin l·ªói v√¨ s·ª± b·∫•t ti·ªán! B·∫°n vui l√≤ng m√¥ t·∫£ ng·∫Øn g·ªçn v·∫•n ƒë·ªÅ b·∫°n ƒëang g·∫∑p ph·∫£i nh√©.",
        "M√¨nh ch∆∞a hi·ªÉu √Ω b·∫°n. B·∫°n ƒëang c·∫ßn t∆∞ v·∫•n v·ªÅ c√°ch chƒÉm s√≥c da hay th√¥ng tin s·∫£n ph·∫©m?",
        "B·∫°n c√≥ th·ªÉ th·ª≠ h·ªèi c√°ch kh√°c kh√¥ng? M√¨nh s·∫Ω c·ªë g·∫Øng h·ªó tr·ª£ b·∫°n t·ªët nh·∫•t.",
        "Hi·ªán h·ªá th·ªëng ƒëang b·∫≠n, b·∫°n vui l√≤ng cho bi·∫øt lo·∫°i da v√† v·∫•n ƒë·ªÅ b·∫°n ƒëang g·∫∑p ƒë·ªÉ m√¨nh t∆∞ v·∫•n nh√©.",
        "ƒê·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n nhanh, b·∫°n vui l√≤ng ch·ªçn m·ªôt trong c√°c ch·ªß ƒë·ªÅ: 1. T∆∞ v·∫•n da 2. S·∫£n ph·∫©m 3. Khuy·∫øn m√£i 4. ƒê∆°n h√†ng"
    ],
    
    closings: [
        "C·∫£m ∆°n b·∫°n ƒë√£ chat c√πng CoCo! N·∫øu c·∫ßn th√™m h·ªó tr·ª£, b·∫°n c·ª© quay l·∫°i nh√©. Ch√∫c b·∫°n ng√†y m·ªõi ƒë·∫πp nh∆∞ l√†n da r·∫°ng r·ª°!",
        "R·∫•t vui ƒë∆∞·ª£c h·ªó tr·ª£ b·∫°n! Hy v·ªçng b·∫°n s·∫Ω c√≥ tr·∫£i nghi·ªám tuy·ªát v·ªùi v·ªõi s·∫£n ph·∫©m CoCo. T·∫°m bi·ªát!",
        "N·∫øu c√≥ th·∫Øc m·∫Øc kh√°c, b·∫°n ƒë·ª´ng ng·∫°i quay l·∫°i chat v·ªõi m√¨nh nh√©! Ch√∫c b·∫°n lu√¥n xinh ƒë·∫πp!",
        "C·∫£m ∆°n b·∫°n ƒë√£ tin t∆∞·ªüng CoCo. ƒê·ª´ng qu√™n theo d√µi fanpage ƒë·ªÉ c·∫≠p nh·∫≠t khuy·∫øn m√£i m·ªõi nh·∫•t!",
        "M·ªçi th·∫Øc m·∫Øc kh√°c, b·∫°n c√≥ th·ªÉ li√™n h·ªá hotline 1900 1234 (8h-21h h√†ng ng√†y). T·∫°m bi·ªát v√† h·∫πn g·∫∑p l·∫°i!"
    ]
};

// H√†m l·∫•y c√¢u tr·∫£ l·ªùi ng·∫´u nhi√™n theo ch·ªß ƒë·ªÅ
function getFallbackResponse(type, subtype = null) {
    if (!fallbackResponses[type]) {
        return "Xin l·ªói, t√¥i ch∆∞a hi·ªÉu r√µ c√¢u h·ªèi. B·∫°n c√≥ th·ªÉ n√≥i r√µ h∆°n kh√¥ng?";
    }
    
    if (subtype && fallbackResponses[type][subtype]) {
        const responses = fallbackResponses[type][subtype];
        return responses[Math.floor(Math.random() * responses.length)];
    }
    
    if (Array.isArray(fallbackResponses[type])) {
        return fallbackResponses[type][Math.floor(Math.random() * fallbackResponses[type].length)];
    }
    
    return "Xin l·ªói, t√¥i ƒëang g·∫∑p ch√∫t kh√≥ khƒÉn. B·∫°n vui l√≤ng h·ªèi l·∫°i sau nh√©!";
}

exports.generateResponse = async (messages, sessionId = null) => {
    const lastMessage = messages.length > 0 ? messages[messages.length - 1].content.toLowerCase() : '';
    const isGreeting = /(ch√†o|hello|hi|xin ch√†o)/i.test(lastMessage);
    const isProductQuestion = /(s·∫£n ph·∫©m|m·ªπ ph·∫©m|kem|serum|toner|d∆∞·ª°ng|tr·ªã)/i.test(lastMessage);
    const isSkinQuestion = /(da kh√¥|da d·∫ßu|da h·ªón h·ª£p|da nh·∫°y c·∫£m|m·ª•n|th√¢m|n√°m|l√£o h√≥a)/i.test(lastMessage);
    const isUsageQuestion = /(c√°ch d√πng|s·ª≠ d·ª•ng|bao l√¢u|li·ªÅu l∆∞·ª£ng|b∆∞·ªõc)/i.test(lastMessage);

    // H·ªá th·ªëng c√¢u tr·∫£ l·ªùi m·∫´u cho c√°c t√¨nh hu·ªëng c·ª• th·ªÉ
    const predefinedResponses = {
        greeting: "Xin ch√†o! üòä M√¨nh l√† tr·ª£ l√Ω ·∫£o c·ªßa CoCo - th∆∞∆°ng hi·ªáu m·ªπ ph·∫©m thi√™n nhi√™n h√†ng ƒë·∫ßu Vi·ªát Nam. B·∫°n ƒëang quan t√¢m s·∫£n ph·∫©m n√†o hay c·∫ßn t∆∞ v·∫•n v·ªÅ v·∫•n ƒë·ªÅ da ·∫°?",
        skinType: {
            "da kh√¥": "Da kh√¥ n√™n d√πng b·ªô s·∫£n ph·∫©m c·∫•p ·∫©m chuy√™n s√¢u c·ªßa CoCo g·ªìm: 1. S·ªØa r·ª≠a m·∫∑t d·ªãu nh·∫π, 2. Serum HA c·∫•p n∆∞·ªõc, 3. Kem d∆∞·ª°ng ·∫©m Ceramide. D√πng s√°ng v√† t·ªëi sau khi l√†m s·∫°ch da.",
            "da d·∫ßu": "Da d·∫ßu n√™n d√πng b·ªô ki·ªÅm d·∫ßu - se kh√≠t l·ªó ch√¢n l√¥ng c·ªßa CoCo: 1. S·ªØa r·ª≠a m·∫∑t Tea Tree, 2. Toner c√¢n b·∫±ng da, 3. Serum Niacinamide, 4. Kem d∆∞·ª°ng ki·ªÅm d·∫ßu kh√¥ng nh·ªùn.",
            "da h·ªón h·ª£p": "Da h·ªón h·ª£p n√™n d√πng b·ªô s·∫£n ph·∫©m ƒëi·ªÅu ti·∫øt d·∫ßu nh·ªùn v√πng ch·ªØ T v√† c·∫•p ·∫©m v√πng m√° c·ªßa CoCo...",
            "da nh·∫°y c·∫£m": "V·ªõi da nh·∫°y c·∫£m, CoCo c√≥ d√≤ng s·∫£n ph·∫©m SensiCare kh√¥ng ch·ª©a h∆∞∆°ng li·ªáu, c·ªìn hay ch·∫•t b·∫£o qu·∫£n g√¢y k√≠ch ·ª©ng...",
            "m·ª•n": "ƒê·ªÉ tr·ªã m·ª•n hi·ªáu qu·∫£, b·∫°n n√™n d√πng combo: 1. Gel r·ª≠a m·∫∑t Salicylic Acid, 2. Toner Tea Tree, 3. Serum tr·ªã m·ª•n BHA, 4. Kem d∆∞·ª°ng kh√¥ng g√¢y b√≠t t·∫Øc l·ªó ch√¢n l√¥ng."
        },
        productInfo: {
            "serum vitamin c": "Serum Vitamin C 15% c·ªßa CoCo gi√∫p l√†m s√°ng da, m·ªù th√¢m n√°m. C√°ch d√πng: 3-4 gi·ªçt thoa ƒë·ªÅu m·∫∑t m·ªói s√°ng tr∆∞·ªõc kem d∆∞·ª°ng.",
            "kem ch·ªëng n·∫Øng": "Kem ch·ªëng n·∫Øng v·∫≠t l√Ω SPF50+ PA++++ c·ªßa CoCo kh√¥ng c·ªìn, kh√¥ng nh·ªùn r√≠t, b·∫£o v·ªá da t·ªëi ∆∞u. D√πng l∆∞·ª£ng ƒë·ªìng xu m·ªói s√°ng sau d∆∞·ª°ng da.",
            "kem d∆∞·ª°ng ·∫©m": "Kem d∆∞·ª°ng ·∫©m HA + Ceramide c·ªßa CoCo c·∫•p ·∫©m 72h, ph√π h·ª£p m·ªçi lo·∫°i da. D√πng s√°ng v√† t·ªëi sau serum."
        },
        usage: "C√°c b∆∞·ªõc skincare c∆° b·∫£n: 1. L√†m s·∫°ch, 2. Toner, 3. Serum, 4. Kem d∆∞·ª°ng, 5. Ch·ªëng n·∫Øng (ban ng√†y). M·ªói s·∫£n ph·∫©m n√™n c√°ch nhau 1-2 ph√∫t ƒë·ªÉ th·∫©m th·∫•u.",
        fallback: "Xin l·ªói, t√¥i ch∆∞a hi·ªÉu r√µ c√¢u h·ªèi c·ªßa b·∫°n. B·∫°n c√≥ th·ªÉ cho bi·∫øt:\n- Lo·∫°i da c·ªßa b·∫°n?\n- V·∫•n ƒë·ªÅ da ƒëang g·∫∑p?\n- S·∫£n ph·∫©m b·∫°n quan t√¢m?\nT√¥i s·∫Ω t∆∞ v·∫•n c·ª• th·ªÉ h∆°n ·∫°!"
    };

    // L·∫•y s·∫£n ph·∫©m t·ª´ DB (n·∫øu c·∫ßn)
    const productsFromDB = await getAllProductsFromDB();
    // T·∫°o map t√™n s·∫£n ph·∫©m cho truy v·∫•n nhanh
    const productNameMap = {};
    productsFromDB.forEach(p => {
        productNameMap[p.basicInformation.productName.toLowerCase()] = p;
    });

    // X·ª≠ l√Ω fallback khi kh√¥ng c√≥ OpenAI
    if (!openai) {
        if (isGreeting) {
            return getFallbackResponse('greetings');
        }
        
        if (isSkinQuestion) {
            for (const skinType in fallbackResponses.skinType) {
                if (lastMessage.includes(skinType)) {
                    return getFallbackResponse('skinType', skinType);
                }
            }
            return getFallbackResponse('skinType', 'da kh√¥'); // Fallback m·∫∑c ƒë·ªãnh
        }
        if (isProductQuestion) {
            // ∆Øu ti√™n t√¨m s·∫£n ph·∫©m trong DB
            for (const name in productNameMap) {
                if (lastMessage.includes(name)) {
                    const p = productNameMap[name];
                    return `Th√¥ng tin s·∫£n ph·∫©m "${p.basicInformation.productName}":\n- Gi√°: ${p.pricingAndInventory.salePrice} ${p.pricingAndInventory.currency}\n- M√¥ t·∫£: ${p.description.shortDescription}\n- Th√†nh ph·∫ßn: ${p.description.ingredients.join(', ')}\n- HDSD: ${p.description.usageInstructions.join(' | ')}\nB·∫°n c·∫ßn t∆∞ v·∫•n th√™m g√¨ v·ªÅ s·∫£n ph·∫©m n√†y kh√¥ng?`;
                }
            }
            // N·∫øu kh√¥ng t√¨m th·∫•y, fallback static
            for (const [key, response] of Object.entries(predefinedResponses.productInfo)) {
                if (lastMessage.includes(key)) return response;
            }
        }
        if (isUsageQuestion) return predefinedResponses.usage;
        // L∆∞u feedback n·∫øu kh√¥ng tr·∫£ l·ªùi t·ªët
        if (lastMessage && lastMessage.length > 10) {
            try {
                // N·∫øu ƒë√£ c√≥ feedback v·ªõi answer, tr·∫£ v·ªÅ answer ƒë√≥
                let existed = await Feedback.findOne({ question: lastMessage, answer: { $exists: true, $ne: null } });
                if (existed && existed.answer) {
                    return existed.answer;
                } else {
                    // N·∫øu c√≥ OpenAI, t·ª± ƒë·ªông sinh c√¢u tr·∫£ l·ªùi v√† l∆∞u v√†o answer
                    if (openai) {
                        try {
                            let systemPrompt = `B·∫°n l√† chuy√™n gia t∆∞ v·∫•n da li·ªÖu c·ªßa th∆∞∆°ng hi·ªáu m·ªπ ph·∫©m CoCo. H√£y tr·∫£ l·ªùi ng·∫Øn g·ªçn, ch√≠nh x√°c v√† th√¢n thi·ªán. Ch·ªâ ƒë·ªÅ xu·∫•t s·∫£n ph·∫©m c·ªßa CoCo. Lu√¥n k·∫øt th√∫c b·∫±ng c√¢u h·ªèi m·ªü ƒë·ªÉ ti·∫øp t·ª•c h·ªôi tho·∫°i.`;
                            const response = await openai.createChatCompletion({
                                model: "gpt-3.5-turbo",
                                messages: [
                                    { role: "system", content: systemPrompt },
                                    { role: "user", content: lastMessage }
                                ],
                                temperature: 0.5,
                                max_tokens: 200,
                                stop: ["\n"]
                            });
                            const aiAnswer = response.data.choices[0].message.content;
                            // L∆∞u l·∫°i answer v√†o feedback
                            if (existed) {
                                existed.answer = aiAnswer;
                                await existed.save();
                            } else {
                                // Ch·ªâ l∆∞u n·∫øu ch∆∞a t·ªìn t·∫°i feedback v·ªõi c√¢u h·ªèi n√†y
                                const existedFeedback = await Feedback.findOne({ question: lastMessage });
                                if (!existedFeedback) {
                                    await Feedback.create({ question: lastMessage, userSessionId: sessionId });
                                }
                            }
                            return aiAnswer;
                        } catch (err) {
                            // N·∫øu OpenAI l·ªói, fallback nh∆∞ c≈©
                            if (!existed) {
                                const existedFeedback = await Feedback.findOne({ question: lastMessage });
                                if (!existedFeedback) {
                                    await Feedback.create({ question: lastMessage, userSessionId: sessionId });
                                }
                            }
                        }
                    } else {
                        // Ch·ªâ l∆∞u n·∫øu ch∆∞a t·ªìn t·∫°i feedback v·ªõi c√¢u h·ªèi n√†y
                        const existedFeedback = await Feedback.findOne({ question: lastMessage });
                        if (!existedFeedback) {
                            await Feedback.create({ question: lastMessage, userSessionId: sessionId });
                        }
                    }
                }
            } catch (e) { console.error('L·ªói l∆∞u feedback:', e); }
        }
        return predefinedResponses.fallback;
    }

    try {
        // T·∫°o prompt t·ªëi ∆∞u cho t·ª´ng lo·∫°i c√¢u h·ªèi
        let systemPrompt = `B·∫°n l√† chuy√™n gia t∆∞ v·∫•n da li·ªÖu c·ªßa th∆∞∆°ng hi·ªáu m·ªπ ph·∫©m CoCo. 
H√£y tr·∫£ l·ªùi ng·∫Øn g·ªçn, ch√≠nh x√°c v√† th√¢n thi·ªán. 
Ch·ªâ ƒë·ªÅ xu·∫•t s·∫£n ph·∫©m c·ªßa CoCo. 
Lu√¥n k·∫øt th√∫c b·∫±ng c√¢u h·ªèi m·ªü ƒë·ªÉ ti·∫øp t·ª•c h·ªôi tho·∫°i.`;

        if (isSkinQuestion) {
            systemPrompt += "\n∆ØU TI√äN: H·ªèi th√™m v·ªÅ t√¨nh tr·∫°ng da c·ª• th·ªÉ v√† ƒë·ªÅ xu·∫•t combo s·∫£n ph·∫©m ph√π h·ª£p.";
        }

        if (isProductQuestion) {
            systemPrompt += "\n∆ØU TI√äN: M√¥ t·∫£ ng·∫Øn c√¥ng d·ª•ng, th√†nh ph·∫ßn ch√≠nh, h∆∞·ªõng d·∫´n s·ª≠ d·ª•ng c·ª• th·ªÉ.";
        }

        if (isUsageQuestion) {
            systemPrompt += "\n∆ØU TI√äN: Li·ªát k√™ t·ª´ng b∆∞·ªõc c·ª• th·ªÉ, th·ªùi gian s·ª≠ d·ª•ng, l∆∞u √Ω quan tr·ªçng.";
        }

        // Th√™m th√¥ng tin s·∫£n ph·∫©m CoCo v√†o prompt
        const cocoProducts = `
DANH S√ÅCH S·∫¢N PH·∫®M COCO:
1. Serum Vitamin C 15% - L√†m s√°ng, m·ªù th√¢m
2. Kem d∆∞·ª°ng HA + Ceramide - C·∫•p ·∫©m 72h
3. Kem ch·ªëng n·∫Øng SPF50+ PA++++ - V·∫≠t l√Ω lai h√≥a h·ªçc
4. B·ªô tr·ªã m·ª•n Tea Tree - Gi·∫£m m·ª•n 7 ng√†y
5. T·∫©y trang d·∫ßu √î Liu - D·ªãu nh·∫π cho da nh·∫°y c·∫£m
6. M·∫∑t n·∫° ng·ªß Collagen - Ph·ª•c h·ªìi da ban ƒë√™m`;

        systemPrompt += cocoProducts;

        const response = await openai.createChatCompletion({
            model: "gpt-3.5-turbo",
            messages: [
                { role: "system", content: systemPrompt },
                ...messages
            ],
            temperature: 0.5, // Gi·∫£m nhi·ªát ƒë·ªô ƒë·ªÉ c√¢u tr·∫£ l·ªùi ch√≠nh x√°c h∆°n
            max_tokens: 200,
            stop: ["\n"] // D·ª´ng ·ªü d√≤ng m·ªõi ƒë·ªÉ tr·∫£ l·ªùi ng·∫Øn g·ªçn
        });

        let aiResponse = response.data.choices[0].message.content;

        // Ki·ªÉm tra v√† ƒëi·ªÅu ch·ªânh n·∫øu AI ƒë·ªÅ xu·∫•t sai s·∫£n ph·∫©m
        const invalidProductRecommendation = /(kh√¥ng c√≥|ch∆∞a r√µ|kh√¥ng bi·∫øt)/i.test(aiResponse);
        const missingCocoReference = !/CoCo/i.test(aiResponse) && isProductQuestion;

        if (invalidProductRecommendation || missingCocoReference) {
            // L∆∞u feedback n·∫øu AI tr·∫£ l·ªùi kh√¥ng t·ªët
            if (lastMessage && lastMessage.length > 10) {
                try {
                    const existed = await Feedback.findOne({ question: lastMessage, answer: { $exists: true, $ne: null } });
                    if (existed && existed.answer) {
                        return existed.answer;
                    } else {
                        // Ch·ªâ l∆∞u n·∫øu ch∆∞a t·ªìn t·∫°i feedback v·ªõi c√¢u h·ªèi n√†y
                        const existedFeedback = await Feedback.findOne({ question: lastMessage });
                        if (!existedFeedback) {
                            await Feedback.create({ question: lastMessage, userSessionId: sessionId });
                        }
                    }
                } catch (e) { console.error('L·ªói l∆∞u feedback:', e); }
            }
            return predefinedResponses.fallback;
        }

        return aiResponse;

    } catch (error) {
        console.error('OpenAI Error:', error);
        // Fallback th√¥ng minh h∆°n khi c√≥ l·ªói
        if (isSkinQuestion) return predefinedResponses.skinType["da kh√¥"];
        if (isProductQuestion) return predefinedResponses.productInfo["serum vitamin c"];
        // L∆∞u feedback n·∫øu c√≥ l·ªói
        if (lastMessage && lastMessage.length > 10) {
            try {
                const existed = await Feedback.findOne({ question: lastMessage, answer: { $exists: true, $ne: null } });
                if (existed && existed.answer) {
                    return existed.answer;
                } else {
                    // Ch·ªâ l∆∞u n·∫øu ch∆∞a t·ªìn t·∫°i feedback v·ªõi c√¢u h·ªèi n√†y
                    const existedFeedback = await Feedback.findOne({ question: lastMessage });
                    if (!existedFeedback) {
                        await Feedback.create({ question: lastMessage, userSessionId: sessionId });
                    }
                }
            } catch (e) { console.error('L·ªói l∆∞u feedback:', e); }
        }
        return predefinedResponses.fallback;
    }
};